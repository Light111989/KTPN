{
  "Query Handler": {
    "prefix": "qhandler",
    "body": [
      "public class Query : IRequest<${1:ReturnObject}>",
      "{",
      "    //* handler props",
      "}",
      "public class Handler : IRequestHandler<Query, ${1:ReturnObject}>",
      "{",
      "    private readonly ApplicationDbContext _context;",
      "",
      "    public Handler(ApplicationDbContext context)",
      "    {",
      "        _context = context;",
      "    }",
      "",
      "    public async Task<${1:ReturnObject}> Handle(Query request, CancellationToken _)",
      "    {",
      "        //* handler logic goes here",
      "    }",
      "}"
    ],
    "description": "Query Handler"
  },
  "Command Handler": {
    "prefix": "chandler",
    "body": [
      "public class Command : IRequest",
      "{",
      "    //* handler props",
      "}",
      "",
      "public class Handler : IRequestHandler<Command>",
      "{",
      "    private readonly ApplicationDbContext _context;",
      "    public Handler(ApplicationDbContext context)",
      "    {",
      "        _context = context;",
      "    }",
      "",
      "    public async Task<Unit> Handle(Command request, CancellationToken cancellationToken)",
      "    {",
      "        //* handler logic",
      "        var success = await _context.SaveChangesAsync() > 0;",
      "        if (success) return Unit.Value;",
      "        throw new Exception(\"Problem saving changes\");",
      "    }",
      "}"
    ],
    "description": "Command Handler"
  }
}
